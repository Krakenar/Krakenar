name: krakenar
services:
  krakenar_mongo:
    image: mongo
    container_name: Krakenar_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: krakenar
      MONGO_INITDB_ROOT_PASSWORD: V6sLFqRpXrAevPM5
    ports:
      - 27046:27017
    volumes:
      - mongodata:/data/db

  krakenar_mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: Krakenar_mssql
    restart: unless-stopped
    user: root
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: H8A9VsMra2vqmpGE
    ports:
      - 1446:1433
    volumes:
      - mssql_backup:/var/opt/mssql/backup
      - mssql_data:/var/opt/mssql/data
      - mssql_log:/var/opt/mssql/log

  krakenar_postgres:
    image: postgres
    container_name: Krakenar_postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: w7eZ5fSW6KQpdBX2
    ports:
      - 5446:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  krakenar:
    build:
      context: ./backend
      dockerfile: /src/Krakenar/Dockerfile
    image: krakenar
    container_name: Krakenar
    depends_on:
      - krakenar_mongo
      - krakenar_mssql
      - krakenar_postgres
    restart: unless-stopped
    environment:
      ASPNETCORE_Environment: Development
      MONGOCONNSTR_Krakenar: mongodb://krakenar:V6sLFqRpXrAevPM5@krakenar_mongo:27017/
      POSTGRESQLCONNSTR_Krakenar: User ID=postgres;Password=w7eZ5fSW6KQpdBX2;Host=krakenar_postgres;Port=5432;Database=Krakenar;
      SQLCONNSTR_Krakenar: Server=krakenar_mssql;Database=Krakenar;User Id=SA;Password=H8A9VsMra2vqmpGE;Persist Security Info=False;Encrypt=False;
    ports:
      - 8096:8080

volumes:
  mongodata:
  mssql_backup:
  mssql_data:
  mssql_log:
  postgres_data:
