CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Identity') THEN
        CREATE SCHEMA "Identity";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Krakenar') THEN
        CREATE SCHEMA "Krakenar";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Content') THEN
        CREATE SCHEMA "Content";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Localization') THEN
        CREATE SCHEMA "Localization";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Logging') THEN
        CREATE SCHEMA "Logging";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM pg_namespace WHERE nspname = 'Messaging') THEN
        CREATE SCHEMA "Messaging";
    END IF;
END $EF$;

CREATE TABLE "Krakenar"."Configuration" (
    "ConfigurationId" integer GENERATED BY DEFAULT AS IDENTITY,
    "Key" character varying(255) NOT NULL,
    "Value" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Configuration" PRIMARY KEY ("ConfigurationId")
);

CREATE TABLE "Identity"."CustomAttributes" (
    "CustomAttributeId" integer GENERATED BY DEFAULT AS IDENTITY,
    "Entity" character varying(255) NOT NULL,
    "Key" character varying(255) NOT NULL,
    "Value" text NOT NULL,
    "ValueShortened" character varying(255) NOT NULL,
    CONSTRAINT "PK_CustomAttributes" PRIMARY KEY ("CustomAttributeId")
);

CREATE TABLE "Logging"."Logs" (
    "LogId" bigint GENERATED BY DEFAULT AS IDENTITY,
    "Id" uuid NOT NULL,
    "CorrelationId" character varying(255),
    "Method" character varying(255),
    "Destination" character varying(2048),
    "Source" character varying(2048),
    "AdditionalInformation" text,
    "OperationType" character varying(255),
    "OperationName" character varying(255),
    "ActivityType" character varying(255),
    "ActivityData" text,
    "StatusCode" integer,
    "IsCompleted" boolean NOT NULL,
    "Level" character varying(255) NOT NULL,
    "HasErrors" boolean NOT NULL,
    "StartedOn" timestamp with time zone NOT NULL,
    "EndedOn" timestamp with time zone,
    "Duration" interval,
    "RealmId" character varying(255),
    "ApiKeyId" character varying(255),
    "SessionId" character varying(255),
    "UserId" character varying(255),
    "ActorId" character varying(255),
    CONSTRAINT "PK_Logs" PRIMARY KEY ("LogId")
);

CREATE TABLE "Krakenar"."Realms" (
    "RealmId" integer GENERATED BY DEFAULT AS IDENTITY,
    "Id" uuid NOT NULL,
    "UniqueSlug" character varying(255) NOT NULL,
    "UniqueSlugNormalized" character varying(255) NOT NULL,
    "DisplayName" character varying(255),
    "Description" text,
    "Secret" character varying(255) NOT NULL,
    "SecretChangedBy" character varying(255),
    "SecretChangedOn" timestamp with time zone NOT NULL,
    "Url" character varying(2048),
    "AllowedUniqueNameCharacters" character varying(255),
    "RequiredPasswordLength" integer NOT NULL,
    "RequiredPasswordUniqueChars" integer NOT NULL,
    "PasswordsRequireNonAlphanumeric" boolean NOT NULL,
    "PasswordsRequireLowercase" boolean NOT NULL,
    "PasswordsRequireUppercase" boolean NOT NULL,
    "PasswordsRequireDigit" boolean NOT NULL,
    "PasswordHashingStrategy" character varying(255) NOT NULL,
    "RequireUniqueEmail" boolean NOT NULL,
    "RequireConfirmedAccount" boolean NOT NULL,
    "CustomAttributes" text,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Realms" PRIMARY KEY ("RealmId")
);

CREATE TABLE "Identity"."TokenBlacklist" (
    "BlacklistedTokenId" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" character varying(255) NOT NULL,
    "ExpiresOn" timestamp with time zone,
    CONSTRAINT "PK_TokenBlacklist" PRIMARY KEY ("BlacklistedTokenId")
);

CREATE TABLE "Logging"."LogEvents" (
    "LogEventId" bigint GENERATED BY DEFAULT AS IDENTITY,
    "LogId" bigint NOT NULL,
    "LogUid" uuid NOT NULL,
    "EventId" character varying(255) NOT NULL,
    CONSTRAINT "PK_LogEvents" PRIMARY KEY ("LogEventId"),
    CONSTRAINT "FK_LogEvents_Logs_LogId" FOREIGN KEY ("LogId") REFERENCES "Logging"."Logs" ("LogId") ON DELETE CASCADE
);

CREATE TABLE "Logging"."LogExceptions" (
    "LogExceptionId" bigint GENERATED BY DEFAULT AS IDENTITY,
    "Id" uuid NOT NULL,
    "LogId" bigint NOT NULL,
    "LogUid" uuid NOT NULL,
    "Type" character varying(255) NOT NULL,
    "Message" text NOT NULL,
    "HResult" integer NOT NULL,
    "HelpLink" text,
    "Source" text,
    "StackTrace" text,
    "TargetSite" text,
    "Data" text,
    CONSTRAINT "PK_LogExceptions" PRIMARY KEY ("LogExceptionId"),
    CONSTRAINT "FK_LogExceptions_Logs_LogId" FOREIGN KEY ("LogId") REFERENCES "Logging"."Logs" ("LogId") ON DELETE CASCADE
);

CREATE TABLE "Identity"."Actors" (
    "ActorId" integer GENERATED BY DEFAULT AS IDENTITY,
    "Key" character varying(255) NOT NULL,
    "RealmId" integer,
    "RealmUid" uuid,
    "Type" character varying(255) NOT NULL,
    "Id" uuid NOT NULL,
    "IsDeleted" boolean NOT NULL,
    "DisplayName" character varying(255) NOT NULL,
    "EmailAddress" character varying(255),
    "PictureUrl" character varying(2048),
    CONSTRAINT "PK_Actors" PRIMARY KEY ("ActorId"),
    CONSTRAINT "FK_Actors_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Identity"."ApiKeys" (
    "ApiKeyId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "SecretHash" character varying(255) NOT NULL,
    "Name" character varying(255) NOT NULL,
    "Description" text,
    "ExpiresOn" timestamp with time zone,
    "AuthenticatedOn" timestamp with time zone,
    "CustomAttributes" text,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_ApiKeys" PRIMARY KEY ("ApiKeyId"),
    CONSTRAINT "FK_ApiKeys_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Content"."ContentTypes" (
    "ContentTypeId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "IsInvariant" boolean NOT NULL,
    "UniqueName" character varying(255) NOT NULL,
    "UniqueNameNormalized" character varying(255) NOT NULL,
    "DisplayName" character varying(255),
    "Description" text,
    "FieldCount" integer NOT NULL,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_ContentTypes" PRIMARY KEY ("ContentTypeId"),
    CONSTRAINT "FK_ContentTypes_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Localization"."Languages" (
    "LanguageId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "IsDefault" boolean NOT NULL,
    "LCID" integer NOT NULL,
    "Code" character varying(16) NOT NULL,
    "CodeNormalized" character varying(16) NOT NULL,
    "DisplayName" character varying(255) NOT NULL,
    "EnglishName" character varying(255) NOT NULL,
    "NativeName" character varying(255) NOT NULL,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Languages" PRIMARY KEY ("LanguageId"),
    CONSTRAINT "FK_Languages_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Identity"."Roles" (
    "RoleId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "UniqueName" character varying(255) NOT NULL,
    "UniqueNameNormalized" character varying(255) NOT NULL,
    "DisplayName" character varying(255),
    "Description" text,
    "CustomAttributes" text,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Roles" PRIMARY KEY ("RoleId"),
    CONSTRAINT "FK_Roles_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Messaging"."Senders" (
    "SenderId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "Kind" character varying(255) NOT NULL,
    "IsDefault" boolean NOT NULL,
    "EmailAddress" character varying(255),
    "PhoneCountryCode" character varying(2),
    "PhoneNumber" character varying(20),
    "PhoneE164Formatted" character varying(40),
    "DisplayName" character varying(255),
    "Description" text,
    "Provider" character varying(255) NOT NULL,
    "Settings" text,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Senders" PRIMARY KEY ("SenderId"),
    CONSTRAINT "FK_Senders_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Messaging"."Templates" (
    "TemplateId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "UniqueName" character varying(255) NOT NULL,
    "UniqueNameNormalized" character varying(255) NOT NULL,
    "DisplayName" character varying(255),
    "Description" text,
    "Subject" character varying(255) NOT NULL,
    "ContentType" character varying(16) NOT NULL,
    "ContentText" text NOT NULL,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Templates" PRIMARY KEY ("TemplateId"),
    CONSTRAINT "FK_Templates_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Identity"."Users" (
    "UserId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "UniqueName" character varying(255) NOT NULL,
    "UniqueNameNormalized" character varying(255) NOT NULL,
    "PasswordHash" character varying(255),
    "PasswordChangedBy" character varying(255),
    "PasswordChangedOn" timestamp with time zone,
    "HasPassword" boolean NOT NULL,
    "DisabledBy" character varying(255),
    "DisabledOn" timestamp with time zone,
    "IsDisabled" boolean NOT NULL,
    "AddressStreet" character varying(255),
    "AddressLocality" character varying(255),
    "AddressPostalCode" character varying(255),
    "AddressRegion" character varying(255),
    "AddressCountry" character varying(255),
    "AddressFormatted" character varying(1279),
    "AddressVerifiedBy" character varying(255),
    "AddressVerifiedOn" timestamp with time zone,
    "IsAddressVerified" boolean NOT NULL,
    "EmailAddress" character varying(255),
    "EmailAddressNormalized" character varying(255),
    "EmailVerifiedBy" character varying(255),
    "EmailVerifiedOn" timestamp with time zone,
    "IsEmailVerified" boolean NOT NULL,
    "PhoneCountryCode" character varying(2),
    "PhoneNumber" character varying(20),
    "PhoneExtension" character varying(10),
    "PhoneE164Formatted" character varying(40),
    "PhoneVerifiedBy" character varying(255),
    "PhoneVerifiedOn" timestamp with time zone,
    "IsPhoneVerified" boolean NOT NULL,
    "IsConfirmed" boolean NOT NULL,
    "FirstName" character varying(255),
    "MiddleName" character varying(255),
    "LastName" character varying(255),
    "FullName" character varying(767),
    "Nickname" character varying(255),
    "Birthdate" timestamp with time zone,
    "Gender" character varying(255),
    "Locale" character varying(16),
    "TimeZone" character varying(32),
    "Picture" character varying(2048),
    "Profile" character varying(2048),
    "Website" character varying(2048),
    "AuthenticatedOn" timestamp with time zone,
    "CustomAttributes" text,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Users" PRIMARY KEY ("UserId"),
    CONSTRAINT "FK_Users_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Content"."Contents" (
    "ContentId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "ContentTypeId" integer NOT NULL,
    "ContentTypeUid" uuid NOT NULL,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Contents" PRIMARY KEY ("ContentId"),
    CONSTRAINT "FK_Contents_ContentTypes_ContentTypeId" FOREIGN KEY ("ContentTypeId") REFERENCES "Content"."ContentTypes" ("ContentTypeId") ON DELETE RESTRICT,
    CONSTRAINT "FK_Contents_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Content"."FieldTypes" (
    "FieldTypeId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "UniqueName" character varying(255) NOT NULL,
    "UniqueNameNormalized" character varying(255) NOT NULL,
    "DisplayName" character varying(255),
    "Description" text,
    "DataType" character varying(255) NOT NULL,
    "Settings" text,
    "RelatedContentTypeId" integer,
    "RelatedContentTypeUid" uuid,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_FieldTypes" PRIMARY KEY ("FieldTypeId"),
    CONSTRAINT "FK_FieldTypes_ContentTypes_RelatedContentTypeId" FOREIGN KEY ("RelatedContentTypeId") REFERENCES "Content"."ContentTypes" ("ContentTypeId") ON DELETE RESTRICT,
    CONSTRAINT "FK_FieldTypes_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Localization"."Dictionaries" (
    "DictionaryId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "LanguageId" integer NOT NULL,
    "LanguageUid" uuid NOT NULL,
    "EntryCount" integer NOT NULL,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Dictionaries" PRIMARY KEY ("DictionaryId"),
    CONSTRAINT "FK_Dictionaries_Languages_LanguageId" FOREIGN KEY ("LanguageId") REFERENCES "Localization"."Languages" ("LanguageId") ON DELETE RESTRICT,
    CONSTRAINT "FK_Dictionaries_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Identity"."ApiKeyRoles" (
    "ApiKeyId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_ApiKeyRoles" PRIMARY KEY ("ApiKeyId", "RoleId"),
    CONSTRAINT "FK_ApiKeyRoles_ApiKeys_ApiKeyId" FOREIGN KEY ("ApiKeyId") REFERENCES "Identity"."ApiKeys" ("ApiKeyId") ON DELETE CASCADE,
    CONSTRAINT "FK_ApiKeyRoles_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Identity"."Roles" ("RoleId") ON DELETE CASCADE
);

CREATE TABLE "Messaging"."Messages" (
    "MessageId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "Subject" character varying(255) NOT NULL,
    "BodyType" character varying(16) NOT NULL,
    "BodyText" text NOT NULL,
    "RecipientCount" integer NOT NULL,
    "SenderId" integer,
    "SenderUid" uuid NOT NULL,
    "SenderIsDefault" boolean NOT NULL,
    "SenderEmailAddress" character varying(255),
    "SenderPhoneCountryCode" character varying(2),
    "SenderPhoneNumber" character varying(20),
    "SenderPhoneExtension" character varying(10),
    "SenderPhoneE164Formatted" character varying(40),
    "SenderDisplayName" character varying(255),
    "SenderProvider" character varying(255) NOT NULL,
    "TemplateId" integer,
    "TemplateUid" uuid NOT NULL,
    "TemplateUniqueName" character varying(255) NOT NULL,
    "TemplateDisplayName" character varying(255),
    "IgnoreUserLocale" boolean NOT NULL,
    "Locale" character varying(16),
    "Variables" text,
    "IsDemo" boolean NOT NULL,
    "Status" character varying(255) NOT NULL,
    "Results" text,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Messages" PRIMARY KEY ("MessageId"),
    CONSTRAINT "FK_Messages_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT,
    CONSTRAINT "FK_Messages_Senders_SenderId" FOREIGN KEY ("SenderId") REFERENCES "Messaging"."Senders" ("SenderId") ON DELETE SET NULL,
    CONSTRAINT "FK_Messages_Templates_TemplateId" FOREIGN KEY ("TemplateId") REFERENCES "Messaging"."Templates" ("TemplateId") ON DELETE SET NULL
);

CREATE TABLE "Identity"."OneTimePasswords" (
    "OneTimePasswordId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "UserId" integer,
    "UserUid" uuid,
    "PasswordHash" character varying(255) NOT NULL,
    "ExpiresOn" timestamp with time zone,
    "MaximumAttempts" integer,
    "AttemptCount" integer NOT NULL,
    "ValidationSucceededOn" timestamp with time zone,
    "CustomAttributes" text,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_OneTimePasswords" PRIMARY KEY ("OneTimePasswordId"),
    CONSTRAINT "FK_OneTimePasswords_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT,
    CONSTRAINT "FK_OneTimePasswords_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Identity"."Users" ("UserId") ON DELETE RESTRICT
);

CREATE TABLE "Identity"."Sessions" (
    "SessionId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "Id" uuid NOT NULL,
    "UserId" integer NOT NULL,
    "UserUid" uuid NOT NULL,
    "SecretHash" character varying(255),
    "IsPersistent" boolean NOT NULL,
    "SignedOutBy" character varying(255),
    "SignedOutOn" timestamp with time zone,
    "IsActive" boolean NOT NULL,
    "CustomAttributes" text,
    "StreamId" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Sessions" PRIMARY KEY ("SessionId"),
    CONSTRAINT "FK_Sessions_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT,
    CONSTRAINT "FK_Sessions_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Identity"."Users" ("UserId") ON DELETE RESTRICT
);

CREATE TABLE "Identity"."UserIdentifiers" (
    "UserIdentifierId" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "UserUid" uuid NOT NULL,
    "RealmId" integer,
    "RealmUid" uuid,
    "Key" character varying(255) NOT NULL,
    "Value" character varying(255) NOT NULL,
    CONSTRAINT "PK_UserIdentifiers" PRIMARY KEY ("UserIdentifierId"),
    CONSTRAINT "FK_UserIdentifiers_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT,
    CONSTRAINT "FK_UserIdentifiers_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Identity"."Users" ("UserId") ON DELETE CASCADE
);

CREATE TABLE "Identity"."UserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_UserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_UserRoles_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Identity"."Roles" ("RoleId") ON DELETE CASCADE,
    CONSTRAINT "FK_UserRoles_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Identity"."Users" ("UserId") ON DELETE CASCADE
);

CREATE TABLE "Content"."ContentLocales" (
    "ContentLocaleId" integer GENERATED BY DEFAULT AS IDENTITY,
    "ContentTypeId" integer NOT NULL,
    "ContentTypeUid" uuid NOT NULL,
    "ContentId" integer NOT NULL,
    "ContentUid" uuid NOT NULL,
    "LanguageId" integer,
    "LanguageUid" uuid,
    "UniqueName" character varying(255) NOT NULL,
    "UniqueNameNormalized" character varying(255) NOT NULL,
    "DisplayName" character varying(255),
    "Description" text,
    "FieldValues" text,
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    "IsPublished" boolean NOT NULL,
    "PublishedVersion" bigint,
    "PublishedBy" character varying(255),
    "PublishedOn" timestamp with time zone,
    CONSTRAINT "PK_ContentLocales" PRIMARY KEY ("ContentLocaleId"),
    CONSTRAINT "FK_ContentLocales_ContentTypes_ContentTypeId" FOREIGN KEY ("ContentTypeId") REFERENCES "Content"."ContentTypes" ("ContentTypeId") ON DELETE RESTRICT,
    CONSTRAINT "FK_ContentLocales_Contents_ContentId" FOREIGN KEY ("ContentId") REFERENCES "Content"."Contents" ("ContentId") ON DELETE CASCADE,
    CONSTRAINT "FK_ContentLocales_Languages_LanguageId" FOREIGN KEY ("LanguageId") REFERENCES "Localization"."Languages" ("LanguageId") ON DELETE RESTRICT
);

CREATE TABLE "Content"."FieldDefinitions" (
    "FieldDefinitionId" integer GENERATED BY DEFAULT AS IDENTITY,
    "ContentTypeId" integer NOT NULL,
    "ContentTypeUid" uuid NOT NULL,
    "Id" uuid NOT NULL,
    "Order" integer NOT NULL,
    "FieldTypeId" integer NOT NULL,
    "FieldTypeUid" uuid NOT NULL,
    "IsInvariant" boolean NOT NULL,
    "IsRequired" boolean NOT NULL,
    "IsIndexed" boolean NOT NULL,
    "IsUnique" boolean NOT NULL,
    "UniqueName" character varying(255) NOT NULL,
    "UniqueNameNormalized" character varying(255) NOT NULL,
    "DisplayName" character varying(255),
    "Description" text,
    "Placeholder" character varying(255),
    "Version" bigint NOT NULL,
    "CreatedBy" character varying(255),
    "CreatedOn" timestamp with time zone NOT NULL,
    "UpdatedBy" character varying(255),
    "UpdatedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_FieldDefinitions" PRIMARY KEY ("FieldDefinitionId"),
    CONSTRAINT "FK_FieldDefinitions_ContentTypes_ContentTypeId" FOREIGN KEY ("ContentTypeId") REFERENCES "Content"."ContentTypes" ("ContentTypeId") ON DELETE CASCADE,
    CONSTRAINT "FK_FieldDefinitions_FieldTypes_FieldTypeId" FOREIGN KEY ("FieldTypeId") REFERENCES "Content"."FieldTypes" ("FieldTypeId") ON DELETE RESTRICT
);

CREATE TABLE "Localization"."DictionaryEntries" (
    "DictionaryEntryId" integer GENERATED BY DEFAULT AS IDENTITY,
    "DictionaryId" integer NOT NULL,
    "Key" character varying(255) NOT NULL,
    "Value" text NOT NULL,
    "ValueShortened" character varying(255) NOT NULL,
    CONSTRAINT "PK_DictionaryEntries" PRIMARY KEY ("DictionaryEntryId"),
    CONSTRAINT "FK_DictionaryEntries_Dictionaries_DictionaryId" FOREIGN KEY ("DictionaryId") REFERENCES "Localization"."Dictionaries" ("DictionaryId") ON DELETE CASCADE
);

CREATE TABLE "Messaging"."Recipients" (
    "RecipientId" integer GENERATED BY DEFAULT AS IDENTITY,
    "Id" uuid NOT NULL,
    "MessageId" integer NOT NULL,
    "Type" character varying(255) NOT NULL,
    "EmailAddress" character varying(255),
    "PhoneCountryCode" character varying(2),
    "PhoneNumber" character varying(20),
    "PhoneExtension" character varying(10),
    "PhoneE164Formatted" character varying(40),
    "DisplayName" character varying(255),
    "UserId" integer,
    "UserUid" uuid,
    "UserUniqueName" character varying(255),
    "UserFullName" character varying(767),
    "UserPicture" character varying(2048),
    CONSTRAINT "PK_Recipients" PRIMARY KEY ("RecipientId"),
    CONSTRAINT "FK_Recipients_Messages_MessageId" FOREIGN KEY ("MessageId") REFERENCES "Messaging"."Messages" ("MessageId") ON DELETE CASCADE,
    CONSTRAINT "FK_Recipients_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Identity"."Users" ("UserId") ON DELETE SET NULL
);

CREATE TABLE "Content"."PublishedContents" (
    "ContentLocaleId" integer NOT NULL,
    "ContentId" integer NOT NULL,
    "ContentUid" uuid NOT NULL,
    "ContentTypeId" integer NOT NULL,
    "ContentTypeUid" uuid NOT NULL,
    "ContentTypeName" character varying(255) NOT NULL,
    "LanguageId" integer,
    "LanguageUid" uuid,
    "LanguageCode" character varying(16),
    "LanguageIsDefault" boolean NOT NULL,
    "UniqueName" character varying(255) NOT NULL,
    "UniqueNameNormalized" character varying(255) NOT NULL,
    "DisplayName" character varying(255),
    "Description" text,
    "FieldValues" text,
    "Version" bigint NOT NULL,
    "PublishedBy" character varying(255),
    "PublishedOn" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_PublishedContents" PRIMARY KEY ("ContentLocaleId"),
    CONSTRAINT "FK_PublishedContents_ContentLocales_ContentLocaleId" FOREIGN KEY ("ContentLocaleId") REFERENCES "Content"."ContentLocales" ("ContentLocaleId") ON DELETE CASCADE,
    CONSTRAINT "FK_PublishedContents_ContentTypes_ContentTypeId" FOREIGN KEY ("ContentTypeId") REFERENCES "Content"."ContentTypes" ("ContentTypeId") ON DELETE RESTRICT,
    CONSTRAINT "FK_PublishedContents_Contents_ContentId" FOREIGN KEY ("ContentId") REFERENCES "Content"."Contents" ("ContentId") ON DELETE RESTRICT,
    CONSTRAINT "FK_PublishedContents_Languages_LanguageId" FOREIGN KEY ("LanguageId") REFERENCES "Localization"."Languages" ("LanguageId") ON DELETE RESTRICT
);

CREATE TABLE "Content"."FieldIndex" (
    "FieldIndexId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "ContentTypeId" integer NOT NULL,
    "ContentTypeUid" uuid NOT NULL,
    "ContentTypeName" character varying(255) NOT NULL,
    "LanguageId" integer,
    "LanguageUid" uuid,
    "LanguageCode" character varying(16),
    "LanguageIsDefault" boolean NOT NULL,
    "FieldTypeId" integer NOT NULL,
    "FieldTypeUid" uuid NOT NULL,
    "FieldTypeName" character varying(255) NOT NULL,
    "FieldDefinitionId" integer NOT NULL,
    "FieldDefinitionUid" uuid NOT NULL,
    "FieldDefinitionName" character varying(255) NOT NULL,
    "ContentId" integer NOT NULL,
    "ContentUid" uuid NOT NULL,
    "ContentLocaleId" integer NOT NULL,
    "ContentLocaleName" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "Status" character varying(10) NOT NULL,
    "Boolean" boolean,
    "DateTime" timestamp with time zone,
    "Number" double precision,
    "RelatedContent" text,
    "RichText" text,
    "Select" text,
    "String" character varying(255),
    "Tags" text,
    CONSTRAINT "PK_FieldIndex" PRIMARY KEY ("FieldIndexId"),
    CONSTRAINT "FK_FieldIndex_ContentLocales_ContentLocaleId" FOREIGN KEY ("ContentLocaleId") REFERENCES "Content"."ContentLocales" ("ContentLocaleId") ON DELETE CASCADE,
    CONSTRAINT "FK_FieldIndex_ContentTypes_ContentTypeId" FOREIGN KEY ("ContentTypeId") REFERENCES "Content"."ContentTypes" ("ContentTypeId") ON DELETE CASCADE,
    CONSTRAINT "FK_FieldIndex_Contents_ContentId" FOREIGN KEY ("ContentId") REFERENCES "Content"."Contents" ("ContentId") ON DELETE RESTRICT,
    CONSTRAINT "FK_FieldIndex_FieldDefinitions_FieldDefinitionId" FOREIGN KEY ("FieldDefinitionId") REFERENCES "Content"."FieldDefinitions" ("FieldDefinitionId") ON DELETE RESTRICT,
    CONSTRAINT "FK_FieldIndex_FieldTypes_FieldTypeId" FOREIGN KEY ("FieldTypeId") REFERENCES "Content"."FieldTypes" ("FieldTypeId") ON DELETE CASCADE,
    CONSTRAINT "FK_FieldIndex_Languages_LanguageId" FOREIGN KEY ("LanguageId") REFERENCES "Localization"."Languages" ("LanguageId") ON DELETE CASCADE,
    CONSTRAINT "FK_FieldIndex_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE TABLE "Content"."UniqueIndex" (
    "UniqueIndexId" integer GENERATED BY DEFAULT AS IDENTITY,
    "RealmId" integer,
    "RealmUid" uuid,
    "ContentTypeId" integer NOT NULL,
    "ContentTypeUid" uuid NOT NULL,
    "ContentTypeName" character varying(255) NOT NULL,
    "LanguageId" integer,
    "LanguageUid" uuid,
    "LanguageCode" character varying(16),
    "LanguageIsDefault" boolean NOT NULL,
    "FieldTypeId" integer NOT NULL,
    "FieldTypeUid" uuid NOT NULL,
    "FieldTypeName" character varying(255) NOT NULL,
    "FieldDefinitionId" integer NOT NULL,
    "FieldDefinitionUid" uuid NOT NULL,
    "FieldDefinitionName" character varying(255) NOT NULL,
    "Version" bigint NOT NULL,
    "Status" character varying(10) NOT NULL,
    "Value" character varying(255) NOT NULL,
    "ValueNormalized" character varying(255) NOT NULL,
    "Key" character varying(278) NOT NULL,
    "ContentId" integer NOT NULL,
    "ContentUid" uuid NOT NULL,
    "ContentLocaleId" integer NOT NULL,
    "ContentLocaleName" character varying(255) NOT NULL,
    CONSTRAINT "PK_UniqueIndex" PRIMARY KEY ("UniqueIndexId"),
    CONSTRAINT "FK_UniqueIndex_ContentLocales_ContentLocaleId" FOREIGN KEY ("ContentLocaleId") REFERENCES "Content"."ContentLocales" ("ContentLocaleId") ON DELETE CASCADE,
    CONSTRAINT "FK_UniqueIndex_ContentTypes_ContentTypeId" FOREIGN KEY ("ContentTypeId") REFERENCES "Content"."ContentTypes" ("ContentTypeId") ON DELETE CASCADE,
    CONSTRAINT "FK_UniqueIndex_Contents_ContentId" FOREIGN KEY ("ContentId") REFERENCES "Content"."Contents" ("ContentId") ON DELETE RESTRICT,
    CONSTRAINT "FK_UniqueIndex_FieldDefinitions_FieldDefinitionId" FOREIGN KEY ("FieldDefinitionId") REFERENCES "Content"."FieldDefinitions" ("FieldDefinitionId") ON DELETE RESTRICT,
    CONSTRAINT "FK_UniqueIndex_FieldTypes_FieldTypeId" FOREIGN KEY ("FieldTypeId") REFERENCES "Content"."FieldTypes" ("FieldTypeId") ON DELETE CASCADE,
    CONSTRAINT "FK_UniqueIndex_Languages_LanguageId" FOREIGN KEY ("LanguageId") REFERENCES "Localization"."Languages" ("LanguageId") ON DELETE CASCADE,
    CONSTRAINT "FK_UniqueIndex_Realms_RealmId" FOREIGN KEY ("RealmId") REFERENCES "Krakenar"."Realms" ("RealmId") ON DELETE RESTRICT
);

CREATE INDEX "IX_Actors_DisplayName" ON "Identity"."Actors" ("DisplayName");

CREATE INDEX "IX_Actors_EmailAddress" ON "Identity"."Actors" ("EmailAddress");

CREATE INDEX "IX_Actors_IsDeleted" ON "Identity"."Actors" ("IsDeleted");

CREATE UNIQUE INDEX "IX_Actors_Key" ON "Identity"."Actors" ("Key");

CREATE UNIQUE INDEX "IX_Actors_RealmId_Type_Id" ON "Identity"."Actors" ("RealmId", "Type", "Id");

CREATE INDEX "IX_Actors_RealmUid" ON "Identity"."Actors" ("RealmUid");

CREATE INDEX "IX_ApiKeyRoles_RoleId" ON "Identity"."ApiKeyRoles" ("RoleId");

CREATE INDEX "IX_ApiKeys_AuthenticatedOn" ON "Identity"."ApiKeys" ("AuthenticatedOn");

CREATE INDEX "IX_ApiKeys_CreatedBy" ON "Identity"."ApiKeys" ("CreatedBy");

CREATE INDEX "IX_ApiKeys_CreatedOn" ON "Identity"."ApiKeys" ("CreatedOn");

CREATE INDEX "IX_ApiKeys_ExpiresOn" ON "Identity"."ApiKeys" ("ExpiresOn");

CREATE INDEX "IX_ApiKeys_Name" ON "Identity"."ApiKeys" ("Name");

CREATE UNIQUE INDEX "IX_ApiKeys_RealmId_Id" ON "Identity"."ApiKeys" ("RealmId", "Id");

CREATE INDEX "IX_ApiKeys_RealmUid" ON "Identity"."ApiKeys" ("RealmUid");

CREATE UNIQUE INDEX "IX_ApiKeys_StreamId" ON "Identity"."ApiKeys" ("StreamId");

CREATE INDEX "IX_ApiKeys_UpdatedBy" ON "Identity"."ApiKeys" ("UpdatedBy");

CREATE INDEX "IX_ApiKeys_UpdatedOn" ON "Identity"."ApiKeys" ("UpdatedOn");

CREATE INDEX "IX_ApiKeys_Version" ON "Identity"."ApiKeys" ("Version");

CREATE INDEX "IX_Configuration_CreatedBy" ON "Krakenar"."Configuration" ("CreatedBy");

CREATE INDEX "IX_Configuration_CreatedOn" ON "Krakenar"."Configuration" ("CreatedOn");

CREATE UNIQUE INDEX "IX_Configuration_Key" ON "Krakenar"."Configuration" ("Key");

CREATE INDEX "IX_Configuration_UpdatedBy" ON "Krakenar"."Configuration" ("UpdatedBy");

CREATE INDEX "IX_Configuration_UpdatedOn" ON "Krakenar"."Configuration" ("UpdatedOn");

CREATE INDEX "IX_Configuration_Value" ON "Krakenar"."Configuration" ("Value");

CREATE INDEX "IX_Configuration_Version" ON "Krakenar"."Configuration" ("Version");

CREATE UNIQUE INDEX "IX_ContentLocales_ContentId_LanguageId" ON "Content"."ContentLocales" ("ContentId", "LanguageId");

CREATE UNIQUE INDEX "IX_ContentLocales_ContentTypeId_LanguageId_UniqueNameNormalized" ON "Content"."ContentLocales" ("ContentTypeId", "LanguageId", "UniqueNameNormalized");

CREATE INDEX "IX_ContentLocales_ContentTypeUid" ON "Content"."ContentLocales" ("ContentTypeUid");

CREATE INDEX "IX_ContentLocales_ContentUid" ON "Content"."ContentLocales" ("ContentUid");

CREATE INDEX "IX_ContentLocales_CreatedBy" ON "Content"."ContentLocales" ("CreatedBy");

CREATE INDEX "IX_ContentLocales_CreatedOn" ON "Content"."ContentLocales" ("CreatedOn");

CREATE INDEX "IX_ContentLocales_DisplayName" ON "Content"."ContentLocales" ("DisplayName");

CREATE INDEX "IX_ContentLocales_IsPublished" ON "Content"."ContentLocales" ("IsPublished");

CREATE INDEX "IX_ContentLocales_LanguageId" ON "Content"."ContentLocales" ("LanguageId");

CREATE INDEX "IX_ContentLocales_LanguageUid" ON "Content"."ContentLocales" ("LanguageUid");

CREATE INDEX "IX_ContentLocales_PublishedBy" ON "Content"."ContentLocales" ("PublishedBy");

CREATE INDEX "IX_ContentLocales_PublishedOn" ON "Content"."ContentLocales" ("PublishedOn");

CREATE INDEX "IX_ContentLocales_PublishedVersion" ON "Content"."ContentLocales" ("PublishedVersion");

CREATE INDEX "IX_ContentLocales_UniqueName" ON "Content"."ContentLocales" ("UniqueName");

CREATE INDEX "IX_ContentLocales_UpdatedBy" ON "Content"."ContentLocales" ("UpdatedBy");

CREATE INDEX "IX_ContentLocales_UpdatedOn" ON "Content"."ContentLocales" ("UpdatedOn");

CREATE INDEX "IX_ContentLocales_Version" ON "Content"."ContentLocales" ("Version");

CREATE INDEX "IX_Contents_ContentTypeId" ON "Content"."Contents" ("ContentTypeId");

CREATE INDEX "IX_Contents_ContentTypeUid" ON "Content"."Contents" ("ContentTypeUid");

CREATE INDEX "IX_Contents_CreatedBy" ON "Content"."Contents" ("CreatedBy");

CREATE INDEX "IX_Contents_CreatedOn" ON "Content"."Contents" ("CreatedOn");

CREATE UNIQUE INDEX "IX_Contents_RealmId_Id" ON "Content"."Contents" ("RealmId", "Id");

CREATE INDEX "IX_Contents_RealmUid" ON "Content"."Contents" ("RealmUid");

CREATE UNIQUE INDEX "IX_Contents_StreamId" ON "Content"."Contents" ("StreamId");

CREATE INDEX "IX_Contents_UpdatedBy" ON "Content"."Contents" ("UpdatedBy");

CREATE INDEX "IX_Contents_UpdatedOn" ON "Content"."Contents" ("UpdatedOn");

CREATE INDEX "IX_Contents_Version" ON "Content"."Contents" ("Version");

CREATE INDEX "IX_ContentTypes_CreatedBy" ON "Content"."ContentTypes" ("CreatedBy");

CREATE INDEX "IX_ContentTypes_CreatedOn" ON "Content"."ContentTypes" ("CreatedOn");

CREATE INDEX "IX_ContentTypes_DisplayName" ON "Content"."ContentTypes" ("DisplayName");

CREATE INDEX "IX_ContentTypes_FieldCount" ON "Content"."ContentTypes" ("FieldCount");

CREATE INDEX "IX_ContentTypes_IsInvariant" ON "Content"."ContentTypes" ("IsInvariant");

CREATE UNIQUE INDEX "IX_ContentTypes_RealmId_Id" ON "Content"."ContentTypes" ("RealmId", "Id");

CREATE UNIQUE INDEX "IX_ContentTypes_RealmId_UniqueNameNormalized" ON "Content"."ContentTypes" ("RealmId", "UniqueNameNormalized");

CREATE INDEX "IX_ContentTypes_RealmUid" ON "Content"."ContentTypes" ("RealmUid");

CREATE UNIQUE INDEX "IX_ContentTypes_StreamId" ON "Content"."ContentTypes" ("StreamId");

CREATE INDEX "IX_ContentTypes_UniqueName" ON "Content"."ContentTypes" ("UniqueName");

CREATE INDEX "IX_ContentTypes_UpdatedBy" ON "Content"."ContentTypes" ("UpdatedBy");

CREATE INDEX "IX_ContentTypes_UpdatedOn" ON "Content"."ContentTypes" ("UpdatedOn");

CREATE INDEX "IX_ContentTypes_Version" ON "Content"."ContentTypes" ("Version");

CREATE UNIQUE INDEX "IX_CustomAttributes_Entity_Key" ON "Identity"."CustomAttributes" ("Entity", "Key");

CREATE INDEX "IX_CustomAttributes_Key" ON "Identity"."CustomAttributes" ("Key");

CREATE INDEX "IX_CustomAttributes_ValueShortened" ON "Identity"."CustomAttributes" ("ValueShortened");

CREATE INDEX "IX_Dictionaries_CreatedBy" ON "Localization"."Dictionaries" ("CreatedBy");

CREATE INDEX "IX_Dictionaries_CreatedOn" ON "Localization"."Dictionaries" ("CreatedOn");

CREATE INDEX "IX_Dictionaries_EntryCount" ON "Localization"."Dictionaries" ("EntryCount");

CREATE UNIQUE INDEX "IX_Dictionaries_LanguageId" ON "Localization"."Dictionaries" ("LanguageId");

CREATE INDEX "IX_Dictionaries_LanguageUid" ON "Localization"."Dictionaries" ("LanguageUid");

CREATE UNIQUE INDEX "IX_Dictionaries_RealmId_Id" ON "Localization"."Dictionaries" ("RealmId", "Id");

CREATE UNIQUE INDEX "IX_Dictionaries_RealmId_LanguageId" ON "Localization"."Dictionaries" ("RealmId", "LanguageId");

CREATE INDEX "IX_Dictionaries_RealmUid" ON "Localization"."Dictionaries" ("RealmUid");

CREATE UNIQUE INDEX "IX_Dictionaries_StreamId" ON "Localization"."Dictionaries" ("StreamId");

CREATE INDEX "IX_Dictionaries_UpdatedBy" ON "Localization"."Dictionaries" ("UpdatedBy");

CREATE INDEX "IX_Dictionaries_UpdatedOn" ON "Localization"."Dictionaries" ("UpdatedOn");

CREATE INDEX "IX_Dictionaries_Version" ON "Localization"."Dictionaries" ("Version");

CREATE UNIQUE INDEX "IX_DictionaryEntries_DictionaryId_Key" ON "Localization"."DictionaryEntries" ("DictionaryId", "Key");

CREATE INDEX "IX_DictionaryEntries_Key" ON "Localization"."DictionaryEntries" ("Key");

CREATE INDEX "IX_DictionaryEntries_ValueShortened" ON "Localization"."DictionaryEntries" ("ValueShortened");

CREATE UNIQUE INDEX "IX_FieldDefinitions_ContentTypeId_Id" ON "Content"."FieldDefinitions" ("ContentTypeId", "Id");

CREATE UNIQUE INDEX "IX_FieldDefinitions_ContentTypeId_Order" ON "Content"."FieldDefinitions" ("ContentTypeId", "Order");

CREATE UNIQUE INDEX "IX_FieldDefinitions_ContentTypeId_UniqueNameNormalized" ON "Content"."FieldDefinitions" ("ContentTypeId", "UniqueNameNormalized");

CREATE INDEX "IX_FieldDefinitions_ContentTypeUid" ON "Content"."FieldDefinitions" ("ContentTypeUid");

CREATE INDEX "IX_FieldDefinitions_CreatedBy" ON "Content"."FieldDefinitions" ("CreatedBy");

CREATE INDEX "IX_FieldDefinitions_CreatedOn" ON "Content"."FieldDefinitions" ("CreatedOn");

CREATE INDEX "IX_FieldDefinitions_DisplayName" ON "Content"."FieldDefinitions" ("DisplayName");

CREATE INDEX "IX_FieldDefinitions_FieldTypeId" ON "Content"."FieldDefinitions" ("FieldTypeId");

CREATE INDEX "IX_FieldDefinitions_FieldTypeUid" ON "Content"."FieldDefinitions" ("FieldTypeUid");

CREATE INDEX "IX_FieldDefinitions_IsIndexed" ON "Content"."FieldDefinitions" ("IsIndexed");

CREATE INDEX "IX_FieldDefinitions_IsInvariant" ON "Content"."FieldDefinitions" ("IsInvariant");

CREATE INDEX "IX_FieldDefinitions_IsRequired" ON "Content"."FieldDefinitions" ("IsRequired");

CREATE INDEX "IX_FieldDefinitions_IsUnique" ON "Content"."FieldDefinitions" ("IsUnique");

CREATE INDEX "IX_FieldDefinitions_Placeholder" ON "Content"."FieldDefinitions" ("Placeholder");

CREATE INDEX "IX_FieldDefinitions_UniqueName" ON "Content"."FieldDefinitions" ("UniqueName");

CREATE INDEX "IX_FieldDefinitions_UpdatedBy" ON "Content"."FieldDefinitions" ("UpdatedBy");

CREATE INDEX "IX_FieldDefinitions_UpdatedOn" ON "Content"."FieldDefinitions" ("UpdatedOn");

CREATE INDEX "IX_FieldDefinitions_Version" ON "Content"."FieldDefinitions" ("Version");

CREATE INDEX "IX_FieldIndex_Boolean" ON "Content"."FieldIndex" ("Boolean");

CREATE INDEX "IX_FieldIndex_ContentId" ON "Content"."FieldIndex" ("ContentId");

CREATE INDEX "IX_FieldIndex_ContentLocaleId" ON "Content"."FieldIndex" ("ContentLocaleId");

CREATE UNIQUE INDEX "IX_FieldIndex_ContentLocaleId_FieldDefinitionId_Status" ON "Content"."FieldIndex" ("ContentLocaleId", "FieldDefinitionId", "Status");

CREATE INDEX "IX_FieldIndex_ContentLocaleName" ON "Content"."FieldIndex" ("ContentLocaleName");

CREATE INDEX "IX_FieldIndex_ContentTypeId" ON "Content"."FieldIndex" ("ContentTypeId");

CREATE INDEX "IX_FieldIndex_ContentTypeName" ON "Content"."FieldIndex" ("ContentTypeName");

CREATE INDEX "IX_FieldIndex_ContentTypeUid" ON "Content"."FieldIndex" ("ContentTypeUid");

CREATE INDEX "IX_FieldIndex_ContentUid" ON "Content"."FieldIndex" ("ContentUid");

CREATE INDEX "IX_FieldIndex_DateTime" ON "Content"."FieldIndex" ("DateTime");

CREATE INDEX "IX_FieldIndex_FieldDefinitionId" ON "Content"."FieldIndex" ("FieldDefinitionId");

CREATE INDEX "IX_FieldIndex_FieldDefinitionName" ON "Content"."FieldIndex" ("FieldDefinitionName");

CREATE INDEX "IX_FieldIndex_FieldDefinitionUid" ON "Content"."FieldIndex" ("FieldDefinitionUid");

CREATE INDEX "IX_FieldIndex_FieldTypeId" ON "Content"."FieldIndex" ("FieldTypeId");

CREATE INDEX "IX_FieldIndex_FieldTypeName" ON "Content"."FieldIndex" ("FieldTypeName");

CREATE INDEX "IX_FieldIndex_FieldTypeUid" ON "Content"."FieldIndex" ("FieldTypeUid");

CREATE INDEX "IX_FieldIndex_LanguageCode" ON "Content"."FieldIndex" ("LanguageCode");

CREATE INDEX "IX_FieldIndex_LanguageId" ON "Content"."FieldIndex" ("LanguageId");

CREATE INDEX "IX_FieldIndex_LanguageIsDefault" ON "Content"."FieldIndex" ("LanguageIsDefault");

CREATE INDEX "IX_FieldIndex_LanguageUid" ON "Content"."FieldIndex" ("LanguageUid");

CREATE INDEX "IX_FieldIndex_Number" ON "Content"."FieldIndex" ("Number");

CREATE INDEX "IX_FieldIndex_RealmId" ON "Content"."FieldIndex" ("RealmId");

CREATE INDEX "IX_FieldIndex_RealmUid" ON "Content"."FieldIndex" ("RealmUid");

CREATE INDEX "IX_FieldIndex_Status" ON "Content"."FieldIndex" ("Status");

CREATE INDEX "IX_FieldIndex_String" ON "Content"."FieldIndex" ("String");

CREATE INDEX "IX_FieldIndex_Version" ON "Content"."FieldIndex" ("Version");

CREATE INDEX "IX_FieldTypes_CreatedBy" ON "Content"."FieldTypes" ("CreatedBy");

CREATE INDEX "IX_FieldTypes_CreatedOn" ON "Content"."FieldTypes" ("CreatedOn");

CREATE INDEX "IX_FieldTypes_DataType" ON "Content"."FieldTypes" ("DataType");

CREATE INDEX "IX_FieldTypes_DisplayName" ON "Content"."FieldTypes" ("DisplayName");

CREATE UNIQUE INDEX "IX_FieldTypes_RealmId_Id" ON "Content"."FieldTypes" ("RealmId", "Id");

CREATE UNIQUE INDEX "IX_FieldTypes_RealmId_UniqueNameNormalized" ON "Content"."FieldTypes" ("RealmId", "UniqueNameNormalized");

CREATE INDEX "IX_FieldTypes_RealmUid" ON "Content"."FieldTypes" ("RealmUid");

CREATE INDEX "IX_FieldTypes_RelatedContentTypeId" ON "Content"."FieldTypes" ("RelatedContentTypeId");

CREATE INDEX "IX_FieldTypes_RelatedContentTypeUid" ON "Content"."FieldTypes" ("RelatedContentTypeUid");

CREATE UNIQUE INDEX "IX_FieldTypes_StreamId" ON "Content"."FieldTypes" ("StreamId");

CREATE INDEX "IX_FieldTypes_UniqueName" ON "Content"."FieldTypes" ("UniqueName");

CREATE INDEX "IX_FieldTypes_UpdatedBy" ON "Content"."FieldTypes" ("UpdatedBy");

CREATE INDEX "IX_FieldTypes_UpdatedOn" ON "Content"."FieldTypes" ("UpdatedOn");

CREATE INDEX "IX_FieldTypes_Version" ON "Content"."FieldTypes" ("Version");

CREATE INDEX "IX_Languages_Code" ON "Localization"."Languages" ("Code");

CREATE INDEX "IX_Languages_CreatedBy" ON "Localization"."Languages" ("CreatedBy");

CREATE INDEX "IX_Languages_CreatedOn" ON "Localization"."Languages" ("CreatedOn");

CREATE INDEX "IX_Languages_DisplayName" ON "Localization"."Languages" ("DisplayName");

CREATE INDEX "IX_Languages_EnglishName" ON "Localization"."Languages" ("EnglishName");

CREATE INDEX "IX_Languages_IsDefault" ON "Localization"."Languages" ("IsDefault");

CREATE INDEX "IX_Languages_NativeName" ON "Localization"."Languages" ("NativeName");

CREATE UNIQUE INDEX "IX_Languages_RealmId_CodeNormalized" ON "Localization"."Languages" ("RealmId", "CodeNormalized");

CREATE UNIQUE INDEX "IX_Languages_RealmId_Id" ON "Localization"."Languages" ("RealmId", "Id");

CREATE UNIQUE INDEX "IX_Languages_RealmId_LCID" ON "Localization"."Languages" ("RealmId", "LCID");

CREATE INDEX "IX_Languages_RealmUid" ON "Localization"."Languages" ("RealmUid");

CREATE UNIQUE INDEX "IX_Languages_StreamId" ON "Localization"."Languages" ("StreamId");

CREATE INDEX "IX_Languages_UpdatedBy" ON "Localization"."Languages" ("UpdatedBy");

CREATE INDEX "IX_Languages_UpdatedOn" ON "Localization"."Languages" ("UpdatedOn");

CREATE INDEX "IX_Languages_Version" ON "Localization"."Languages" ("Version");

CREATE UNIQUE INDEX "IX_LogEvents_LogId_EventId" ON "Logging"."LogEvents" ("LogId", "EventId");

CREATE INDEX "IX_LogEvents_LogUid" ON "Logging"."LogEvents" ("LogUid");

CREATE UNIQUE INDEX "IX_LogExceptions_Id" ON "Logging"."LogExceptions" ("Id");

CREATE INDEX "IX_LogExceptions_LogId" ON "Logging"."LogExceptions" ("LogId");

CREATE INDEX "IX_LogExceptions_LogUid" ON "Logging"."LogExceptions" ("LogUid");

CREATE INDEX "IX_LogExceptions_Type" ON "Logging"."LogExceptions" ("Type");

CREATE INDEX "IX_Logs_ActivityType" ON "Logging"."Logs" ("ActivityType");

CREATE INDEX "IX_Logs_ActorId" ON "Logging"."Logs" ("ActorId");

CREATE INDEX "IX_Logs_ApiKeyId" ON "Logging"."Logs" ("ApiKeyId");

CREATE INDEX "IX_Logs_CorrelationId" ON "Logging"."Logs" ("CorrelationId");

CREATE INDEX "IX_Logs_Duration" ON "Logging"."Logs" ("Duration");

CREATE INDEX "IX_Logs_EndedOn" ON "Logging"."Logs" ("EndedOn");

CREATE INDEX "IX_Logs_HasErrors" ON "Logging"."Logs" ("HasErrors");

CREATE UNIQUE INDEX "IX_Logs_Id" ON "Logging"."Logs" ("Id");

CREATE INDEX "IX_Logs_IsCompleted" ON "Logging"."Logs" ("IsCompleted");

CREATE INDEX "IX_Logs_Level" ON "Logging"."Logs" ("Level");

CREATE INDEX "IX_Logs_Method" ON "Logging"."Logs" ("Method");

CREATE INDEX "IX_Logs_OperationName" ON "Logging"."Logs" ("OperationName");

CREATE INDEX "IX_Logs_OperationType" ON "Logging"."Logs" ("OperationType");

CREATE INDEX "IX_Logs_RealmId" ON "Logging"."Logs" ("RealmId");

CREATE INDEX "IX_Logs_SessionId" ON "Logging"."Logs" ("SessionId");

CREATE INDEX "IX_Logs_StartedOn" ON "Logging"."Logs" ("StartedOn");

CREATE INDEX "IX_Logs_StatusCode" ON "Logging"."Logs" ("StatusCode");

CREATE INDEX "IX_Logs_UserId" ON "Logging"."Logs" ("UserId");

CREATE INDEX "IX_Messages_BodyType" ON "Messaging"."Messages" ("BodyType");

CREATE INDEX "IX_Messages_CreatedBy" ON "Messaging"."Messages" ("CreatedBy");

CREATE INDEX "IX_Messages_CreatedOn" ON "Messaging"."Messages" ("CreatedOn");

CREATE INDEX "IX_Messages_IsDemo" ON "Messaging"."Messages" ("IsDemo");

CREATE INDEX "IX_Messages_Locale" ON "Messaging"."Messages" ("Locale");

CREATE UNIQUE INDEX "IX_Messages_RealmId_Id" ON "Messaging"."Messages" ("RealmId", "Id");

CREATE INDEX "IX_Messages_RealmUid" ON "Messaging"."Messages" ("RealmUid");

CREATE INDEX "IX_Messages_RecipientCount" ON "Messaging"."Messages" ("RecipientCount");

CREATE INDEX "IX_Messages_SenderId" ON "Messaging"."Messages" ("SenderId");

CREATE INDEX "IX_Messages_SenderProvider" ON "Messaging"."Messages" ("SenderProvider");

CREATE INDEX "IX_Messages_SenderUid" ON "Messaging"."Messages" ("SenderUid");

CREATE INDEX "IX_Messages_Status" ON "Messaging"."Messages" ("Status");

CREATE UNIQUE INDEX "IX_Messages_StreamId" ON "Messaging"."Messages" ("StreamId");

CREATE INDEX "IX_Messages_Subject" ON "Messaging"."Messages" ("Subject");

CREATE INDEX "IX_Messages_TemplateId" ON "Messaging"."Messages" ("TemplateId");

CREATE INDEX "IX_Messages_TemplateUid" ON "Messaging"."Messages" ("TemplateUid");

CREATE INDEX "IX_Messages_UpdatedBy" ON "Messaging"."Messages" ("UpdatedBy");

CREATE INDEX "IX_Messages_UpdatedOn" ON "Messaging"."Messages" ("UpdatedOn");

CREATE INDEX "IX_Messages_Version" ON "Messaging"."Messages" ("Version");

CREATE INDEX "IX_OneTimePasswords_AttemptCount" ON "Identity"."OneTimePasswords" ("AttemptCount");

CREATE INDEX "IX_OneTimePasswords_CreatedBy" ON "Identity"."OneTimePasswords" ("CreatedBy");

CREATE INDEX "IX_OneTimePasswords_CreatedOn" ON "Identity"."OneTimePasswords" ("CreatedOn");

CREATE INDEX "IX_OneTimePasswords_ExpiresOn" ON "Identity"."OneTimePasswords" ("ExpiresOn");

CREATE INDEX "IX_OneTimePasswords_Id" ON "Identity"."OneTimePasswords" ("Id");

CREATE INDEX "IX_OneTimePasswords_MaximumAttempts" ON "Identity"."OneTimePasswords" ("MaximumAttempts");

CREATE UNIQUE INDEX "IX_OneTimePasswords_RealmId_Id" ON "Identity"."OneTimePasswords" ("RealmId", "Id");

CREATE INDEX "IX_OneTimePasswords_RealmUid" ON "Identity"."OneTimePasswords" ("RealmUid");

CREATE UNIQUE INDEX "IX_OneTimePasswords_StreamId" ON "Identity"."OneTimePasswords" ("StreamId");

CREATE INDEX "IX_OneTimePasswords_UpdatedBy" ON "Identity"."OneTimePasswords" ("UpdatedBy");

CREATE INDEX "IX_OneTimePasswords_UpdatedOn" ON "Identity"."OneTimePasswords" ("UpdatedOn");

CREATE INDEX "IX_OneTimePasswords_UserId" ON "Identity"."OneTimePasswords" ("UserId");

CREATE INDEX "IX_OneTimePasswords_UserUid" ON "Identity"."OneTimePasswords" ("UserUid");

CREATE INDEX "IX_OneTimePasswords_ValidationSucceededOn" ON "Identity"."OneTimePasswords" ("ValidationSucceededOn");

CREATE INDEX "IX_OneTimePasswords_Version" ON "Identity"."OneTimePasswords" ("Version");

CREATE INDEX "IX_PublishedContents_ContentId" ON "Content"."PublishedContents" ("ContentId");

CREATE INDEX "IX_PublishedContents_ContentTypeId" ON "Content"."PublishedContents" ("ContentTypeId");

CREATE INDEX "IX_PublishedContents_ContentTypeName" ON "Content"."PublishedContents" ("ContentTypeName");

CREATE INDEX "IX_PublishedContents_ContentTypeUid" ON "Content"."PublishedContents" ("ContentTypeUid");

CREATE INDEX "IX_PublishedContents_ContentUid" ON "Content"."PublishedContents" ("ContentUid");

CREATE INDEX "IX_PublishedContents_DisplayName" ON "Content"."PublishedContents" ("DisplayName");

CREATE INDEX "IX_PublishedContents_LanguageCode" ON "Content"."PublishedContents" ("LanguageCode");

CREATE INDEX "IX_PublishedContents_LanguageId" ON "Content"."PublishedContents" ("LanguageId");

CREATE INDEX "IX_PublishedContents_LanguageIsDefault" ON "Content"."PublishedContents" ("LanguageIsDefault");

CREATE INDEX "IX_PublishedContents_LanguageUid" ON "Content"."PublishedContents" ("LanguageUid");

CREATE INDEX "IX_PublishedContents_PublishedBy" ON "Content"."PublishedContents" ("PublishedBy");

CREATE INDEX "IX_PublishedContents_PublishedOn" ON "Content"."PublishedContents" ("PublishedOn");

CREATE INDEX "IX_PublishedContents_UniqueName" ON "Content"."PublishedContents" ("UniqueName");

CREATE INDEX "IX_PublishedContents_UniqueNameNormalized" ON "Content"."PublishedContents" ("UniqueNameNormalized");

CREATE INDEX "IX_PublishedContents_Version" ON "Content"."PublishedContents" ("Version");

CREATE INDEX "IX_Realms_CreatedBy" ON "Krakenar"."Realms" ("CreatedBy");

CREATE INDEX "IX_Realms_CreatedOn" ON "Krakenar"."Realms" ("CreatedOn");

CREATE INDEX "IX_Realms_DisplayName" ON "Krakenar"."Realms" ("DisplayName");

CREATE UNIQUE INDEX "IX_Realms_Id" ON "Krakenar"."Realms" ("Id");

CREATE INDEX "IX_Realms_SecretChangedBy" ON "Krakenar"."Realms" ("SecretChangedBy");

CREATE INDEX "IX_Realms_SecretChangedOn" ON "Krakenar"."Realms" ("SecretChangedOn");

CREATE UNIQUE INDEX "IX_Realms_StreamId" ON "Krakenar"."Realms" ("StreamId");

CREATE INDEX "IX_Realms_UniqueSlug" ON "Krakenar"."Realms" ("UniqueSlug");

CREATE UNIQUE INDEX "IX_Realms_UniqueSlugNormalized" ON "Krakenar"."Realms" ("UniqueSlugNormalized");

CREATE INDEX "IX_Realms_UpdatedBy" ON "Krakenar"."Realms" ("UpdatedBy");

CREATE INDEX "IX_Realms_UpdatedOn" ON "Krakenar"."Realms" ("UpdatedOn");

CREATE INDEX "IX_Realms_Version" ON "Krakenar"."Realms" ("Version");

CREATE INDEX "IX_Recipients_DisplayName" ON "Messaging"."Recipients" ("DisplayName");

CREATE INDEX "IX_Recipients_EmailAddress" ON "Messaging"."Recipients" ("EmailAddress");

CREATE UNIQUE INDEX "IX_Recipients_Id" ON "Messaging"."Recipients" ("Id");

CREATE INDEX "IX_Recipients_MessageId" ON "Messaging"."Recipients" ("MessageId");

CREATE INDEX "IX_Recipients_PhoneE164Formatted" ON "Messaging"."Recipients" ("PhoneE164Formatted");

CREATE INDEX "IX_Recipients_Type" ON "Messaging"."Recipients" ("Type");

CREATE INDEX "IX_Recipients_UserFullName" ON "Messaging"."Recipients" ("UserFullName");

CREATE INDEX "IX_Recipients_UserId" ON "Messaging"."Recipients" ("UserId");

CREATE INDEX "IX_Recipients_UserUid" ON "Messaging"."Recipients" ("UserUid");

CREATE INDEX "IX_Recipients_UserUniqueName" ON "Messaging"."Recipients" ("UserUniqueName");

CREATE INDEX "IX_Roles_CreatedBy" ON "Identity"."Roles" ("CreatedBy");

CREATE INDEX "IX_Roles_CreatedOn" ON "Identity"."Roles" ("CreatedOn");

CREATE INDEX "IX_Roles_DisplayName" ON "Identity"."Roles" ("DisplayName");

CREATE UNIQUE INDEX "IX_Roles_RealmId_Id" ON "Identity"."Roles" ("RealmId", "Id");

CREATE UNIQUE INDEX "IX_Roles_RealmId_UniqueNameNormalized" ON "Identity"."Roles" ("RealmId", "UniqueNameNormalized");

CREATE INDEX "IX_Roles_RealmUid" ON "Identity"."Roles" ("RealmUid");

CREATE UNIQUE INDEX "IX_Roles_StreamId" ON "Identity"."Roles" ("StreamId");

CREATE INDEX "IX_Roles_UniqueName" ON "Identity"."Roles" ("UniqueName");

CREATE INDEX "IX_Roles_UpdatedBy" ON "Identity"."Roles" ("UpdatedBy");

CREATE INDEX "IX_Roles_UpdatedOn" ON "Identity"."Roles" ("UpdatedOn");

CREATE INDEX "IX_Roles_Version" ON "Identity"."Roles" ("Version");

CREATE INDEX "IX_Senders_CreatedBy" ON "Messaging"."Senders" ("CreatedBy");

CREATE INDEX "IX_Senders_CreatedOn" ON "Messaging"."Senders" ("CreatedOn");

CREATE INDEX "IX_Senders_DisplayName" ON "Messaging"."Senders" ("DisplayName");

CREATE INDEX "IX_Senders_EmailAddress" ON "Messaging"."Senders" ("EmailAddress");

CREATE INDEX "IX_Senders_Kind" ON "Messaging"."Senders" ("Kind");

CREATE INDEX "IX_Senders_PhoneE164Formatted" ON "Messaging"."Senders" ("PhoneE164Formatted");

CREATE INDEX "IX_Senders_Provider" ON "Messaging"."Senders" ("Provider");

CREATE UNIQUE INDEX "IX_Senders_RealmId_Id" ON "Messaging"."Senders" ("RealmId", "Id");

CREATE INDEX "IX_Senders_RealmId_Kind_IsDefault" ON "Messaging"."Senders" ("RealmId", "Kind", "IsDefault");

CREATE INDEX "IX_Senders_RealmUid" ON "Messaging"."Senders" ("RealmUid");

CREATE UNIQUE INDEX "IX_Senders_StreamId" ON "Messaging"."Senders" ("StreamId");

CREATE INDEX "IX_Senders_UpdatedBy" ON "Messaging"."Senders" ("UpdatedBy");

CREATE INDEX "IX_Senders_UpdatedOn" ON "Messaging"."Senders" ("UpdatedOn");

CREATE INDEX "IX_Senders_Version" ON "Messaging"."Senders" ("Version");

CREATE INDEX "IX_Sessions_CreatedBy" ON "Identity"."Sessions" ("CreatedBy");

CREATE INDEX "IX_Sessions_CreatedOn" ON "Identity"."Sessions" ("CreatedOn");

CREATE INDEX "IX_Sessions_Id" ON "Identity"."Sessions" ("Id");

CREATE INDEX "IX_Sessions_IsActive" ON "Identity"."Sessions" ("IsActive");

CREATE INDEX "IX_Sessions_IsPersistent" ON "Identity"."Sessions" ("IsPersistent");

CREATE UNIQUE INDEX "IX_Sessions_RealmId_Id" ON "Identity"."Sessions" ("RealmId", "Id");

CREATE INDEX "IX_Sessions_RealmUid" ON "Identity"."Sessions" ("RealmUid");

CREATE INDEX "IX_Sessions_SignedOutBy" ON "Identity"."Sessions" ("SignedOutBy");

CREATE INDEX "IX_Sessions_SignedOutOn" ON "Identity"."Sessions" ("SignedOutOn");

CREATE UNIQUE INDEX "IX_Sessions_StreamId" ON "Identity"."Sessions" ("StreamId");

CREATE INDEX "IX_Sessions_UpdatedBy" ON "Identity"."Sessions" ("UpdatedBy");

CREATE INDEX "IX_Sessions_UpdatedOn" ON "Identity"."Sessions" ("UpdatedOn");

CREATE INDEX "IX_Sessions_UserId" ON "Identity"."Sessions" ("UserId");

CREATE INDEX "IX_Sessions_UserUid" ON "Identity"."Sessions" ("UserUid");

CREATE INDEX "IX_Sessions_Version" ON "Identity"."Sessions" ("Version");

CREATE INDEX "IX_Templates_ContentType" ON "Messaging"."Templates" ("ContentType");

CREATE INDEX "IX_Templates_CreatedBy" ON "Messaging"."Templates" ("CreatedBy");

CREATE INDEX "IX_Templates_CreatedOn" ON "Messaging"."Templates" ("CreatedOn");

CREATE INDEX "IX_Templates_DisplayName" ON "Messaging"."Templates" ("DisplayName");

CREATE UNIQUE INDEX "IX_Templates_RealmId_Id" ON "Messaging"."Templates" ("RealmId", "Id");

CREATE UNIQUE INDEX "IX_Templates_RealmId_UniqueNameNormalized" ON "Messaging"."Templates" ("RealmId", "UniqueNameNormalized");

CREATE INDEX "IX_Templates_RealmUid" ON "Messaging"."Templates" ("RealmUid");

CREATE UNIQUE INDEX "IX_Templates_StreamId" ON "Messaging"."Templates" ("StreamId");

CREATE INDEX "IX_Templates_Subject" ON "Messaging"."Templates" ("Subject");

CREATE INDEX "IX_Templates_UniqueName" ON "Messaging"."Templates" ("UniqueName");

CREATE INDEX "IX_Templates_UpdatedBy" ON "Messaging"."Templates" ("UpdatedBy");

CREATE INDEX "IX_Templates_UpdatedOn" ON "Messaging"."Templates" ("UpdatedOn");

CREATE INDEX "IX_Templates_Version" ON "Messaging"."Templates" ("Version");

CREATE INDEX "IX_TokenBlacklist_ExpiresOn" ON "Identity"."TokenBlacklist" ("ExpiresOn");

CREATE UNIQUE INDEX "IX_TokenBlacklist_TokenId" ON "Identity"."TokenBlacklist" ("TokenId");

CREATE INDEX "IX_UniqueIndex_ContentId" ON "Content"."UniqueIndex" ("ContentId");

CREATE INDEX "IX_UniqueIndex_ContentLocaleId" ON "Content"."UniqueIndex" ("ContentLocaleId");

CREATE INDEX "IX_UniqueIndex_ContentLocaleName" ON "Content"."UniqueIndex" ("ContentLocaleName");

CREATE INDEX "IX_UniqueIndex_ContentTypeId" ON "Content"."UniqueIndex" ("ContentTypeId");

CREATE INDEX "IX_UniqueIndex_ContentTypeName" ON "Content"."UniqueIndex" ("ContentTypeName");

CREATE INDEX "IX_UniqueIndex_ContentTypeUid" ON "Content"."UniqueIndex" ("ContentTypeUid");

CREATE INDEX "IX_UniqueIndex_ContentUid" ON "Content"."UniqueIndex" ("ContentUid");

CREATE INDEX "IX_UniqueIndex_FieldDefinitionId" ON "Content"."UniqueIndex" ("FieldDefinitionId");

CREATE UNIQUE INDEX "IX_UniqueIndex_FieldDefinitionId_LanguageId_Status_ValueNormal~" ON "Content"."UniqueIndex" ("FieldDefinitionId", "LanguageId", "Status", "ValueNormalized");

CREATE INDEX "IX_UniqueIndex_FieldDefinitionName" ON "Content"."UniqueIndex" ("FieldDefinitionName");

CREATE INDEX "IX_UniqueIndex_FieldDefinitionUid" ON "Content"."UniqueIndex" ("FieldDefinitionUid");

CREATE INDEX "IX_UniqueIndex_FieldTypeId" ON "Content"."UniqueIndex" ("FieldTypeId");

CREATE INDEX "IX_UniqueIndex_FieldTypeName" ON "Content"."UniqueIndex" ("FieldTypeName");

CREATE INDEX "IX_UniqueIndex_FieldTypeUid" ON "Content"."UniqueIndex" ("FieldTypeUid");

CREATE INDEX "IX_UniqueIndex_Key" ON "Content"."UniqueIndex" ("Key");

CREATE INDEX "IX_UniqueIndex_LanguageCode" ON "Content"."UniqueIndex" ("LanguageCode");

CREATE INDEX "IX_UniqueIndex_LanguageId" ON "Content"."UniqueIndex" ("LanguageId");

CREATE INDEX "IX_UniqueIndex_LanguageIsDefault" ON "Content"."UniqueIndex" ("LanguageIsDefault");

CREATE INDEX "IX_UniqueIndex_LanguageUid" ON "Content"."UniqueIndex" ("LanguageUid");

CREATE INDEX "IX_UniqueIndex_RealmId" ON "Content"."UniqueIndex" ("RealmId");

CREATE INDEX "IX_UniqueIndex_RealmUid" ON "Content"."UniqueIndex" ("RealmUid");

CREATE INDEX "IX_UniqueIndex_Status" ON "Content"."UniqueIndex" ("Status");

CREATE INDEX "IX_UniqueIndex_Value" ON "Content"."UniqueIndex" ("Value");

CREATE INDEX "IX_UniqueIndex_ValueNormalized" ON "Content"."UniqueIndex" ("ValueNormalized");

CREATE INDEX "IX_UniqueIndex_Version" ON "Content"."UniqueIndex" ("Version");

CREATE INDEX "IX_UserIdentifiers_Key" ON "Identity"."UserIdentifiers" ("Key");

CREATE UNIQUE INDEX "IX_UserIdentifiers_RealmId_Key_Value" ON "Identity"."UserIdentifiers" ("RealmId", "Key", "Value");

CREATE INDEX "IX_UserIdentifiers_RealmUid" ON "Identity"."UserIdentifiers" ("RealmUid");

CREATE UNIQUE INDEX "IX_UserIdentifiers_UserId_Key" ON "Identity"."UserIdentifiers" ("UserId", "Key");

CREATE INDEX "IX_UserIdentifiers_UserUid" ON "Identity"."UserIdentifiers" ("UserUid");

CREATE INDEX "IX_UserIdentifiers_Value" ON "Identity"."UserIdentifiers" ("Value");

CREATE INDEX "IX_UserRoles_RoleId" ON "Identity"."UserRoles" ("RoleId");

CREATE INDEX "IX_Users_AddressCountry" ON "Identity"."Users" ("AddressCountry");

CREATE INDEX "IX_Users_AddressFormatted" ON "Identity"."Users" ("AddressFormatted");

CREATE INDEX "IX_Users_AddressLocality" ON "Identity"."Users" ("AddressLocality");

CREATE INDEX "IX_Users_AddressPostalCode" ON "Identity"."Users" ("AddressPostalCode");

CREATE INDEX "IX_Users_AddressRegion" ON "Identity"."Users" ("AddressRegion");

CREATE INDEX "IX_Users_AddressStreet" ON "Identity"."Users" ("AddressStreet");

CREATE INDEX "IX_Users_AddressVerifiedBy" ON "Identity"."Users" ("AddressVerifiedBy");

CREATE INDEX "IX_Users_AddressVerifiedOn" ON "Identity"."Users" ("AddressVerifiedOn");

CREATE INDEX "IX_Users_AuthenticatedOn" ON "Identity"."Users" ("AuthenticatedOn");

CREATE INDEX "IX_Users_Birthdate" ON "Identity"."Users" ("Birthdate");

CREATE INDEX "IX_Users_CreatedBy" ON "Identity"."Users" ("CreatedBy");

CREATE INDEX "IX_Users_CreatedOn" ON "Identity"."Users" ("CreatedOn");

CREATE INDEX "IX_Users_DisabledBy" ON "Identity"."Users" ("DisabledBy");

CREATE INDEX "IX_Users_DisabledOn" ON "Identity"."Users" ("DisabledOn");

CREATE INDEX "IX_Users_EmailAddress" ON "Identity"."Users" ("EmailAddress");

CREATE INDEX "IX_Users_EmailVerifiedBy" ON "Identity"."Users" ("EmailVerifiedBy");

CREATE INDEX "IX_Users_EmailVerifiedOn" ON "Identity"."Users" ("EmailVerifiedOn");

CREATE INDEX "IX_Users_FirstName" ON "Identity"."Users" ("FirstName");

CREATE INDEX "IX_Users_FullName" ON "Identity"."Users" ("FullName");

CREATE INDEX "IX_Users_Gender" ON "Identity"."Users" ("Gender");

CREATE INDEX "IX_Users_HasPassword" ON "Identity"."Users" ("HasPassword");

CREATE INDEX "IX_Users_IsAddressVerified" ON "Identity"."Users" ("IsAddressVerified");

CREATE INDEX "IX_Users_IsConfirmed" ON "Identity"."Users" ("IsConfirmed");

CREATE INDEX "IX_Users_IsDisabled" ON "Identity"."Users" ("IsDisabled");

CREATE INDEX "IX_Users_IsEmailVerified" ON "Identity"."Users" ("IsEmailVerified");

CREATE INDEX "IX_Users_IsPhoneVerified" ON "Identity"."Users" ("IsPhoneVerified");

CREATE INDEX "IX_Users_LastName" ON "Identity"."Users" ("LastName");

CREATE INDEX "IX_Users_Locale" ON "Identity"."Users" ("Locale");

CREATE INDEX "IX_Users_MiddleName" ON "Identity"."Users" ("MiddleName");

CREATE INDEX "IX_Users_Nickname" ON "Identity"."Users" ("Nickname");

CREATE INDEX "IX_Users_PasswordChangedBy" ON "Identity"."Users" ("PasswordChangedBy");

CREATE INDEX "IX_Users_PasswordChangedOn" ON "Identity"."Users" ("PasswordChangedOn");

CREATE INDEX "IX_Users_PhoneCountryCode" ON "Identity"."Users" ("PhoneCountryCode");

CREATE INDEX "IX_Users_PhoneE164Formatted" ON "Identity"."Users" ("PhoneE164Formatted");

CREATE INDEX "IX_Users_PhoneExtension" ON "Identity"."Users" ("PhoneExtension");

CREATE INDEX "IX_Users_PhoneNumber" ON "Identity"."Users" ("PhoneNumber");

CREATE INDEX "IX_Users_PhoneVerifiedBy" ON "Identity"."Users" ("PhoneVerifiedBy");

CREATE INDEX "IX_Users_PhoneVerifiedOn" ON "Identity"."Users" ("PhoneVerifiedOn");

CREATE INDEX "IX_Users_RealmId_EmailAddressNormalized" ON "Identity"."Users" ("RealmId", "EmailAddressNormalized");

CREATE UNIQUE INDEX "IX_Users_RealmId_Id" ON "Identity"."Users" ("RealmId", "Id");

CREATE UNIQUE INDEX "IX_Users_RealmId_UniqueNameNormalized" ON "Identity"."Users" ("RealmId", "UniqueNameNormalized");

CREATE INDEX "IX_Users_RealmUid" ON "Identity"."Users" ("RealmUid");

CREATE UNIQUE INDEX "IX_Users_StreamId" ON "Identity"."Users" ("StreamId");

CREATE INDEX "IX_Users_TimeZone" ON "Identity"."Users" ("TimeZone");

CREATE INDEX "IX_Users_UniqueName" ON "Identity"."Users" ("UniqueName");

CREATE INDEX "IX_Users_UpdatedBy" ON "Identity"."Users" ("UpdatedBy");

CREATE INDEX "IX_Users_UpdatedOn" ON "Identity"."Users" ("UpdatedOn");

CREATE INDEX "IX_Users_Version" ON "Identity"."Users" ("Version");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250601031340_Krakenar_1_0_0', '9.0.4');

COMMIT;

